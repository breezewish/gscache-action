name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  check-format:
    name: Check Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

  test:
    runs-on: ubuntu-latest

    services:
      minio:
        image: minio/minio:edge-cicd
        options: --health-cmd "curl -s http://localhost:9000/minio/health/live"
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: false

      - name: Setup MinIO client and create bucket
        run: |
          curl -fsSL https://dl.min.io/client/mc/release/linux-amd64/mc -o mc
          chmod +x mc
          ./mc alias set local http://localhost:9000 minioadmin minioadmin
          ./mc mb local/gscache-bucket
          ./mc ls local/

      - name: Setup gscache
        uses: ./
        with:
          config: |
            [backend]
            which = "blob"
            [backend.blob]
            url = "s3://gscache-bucket?endpoint=http://localhost:9000&&use_path_style=true&disable_https=true"
        env:
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_SECRET_ACCESS_KEY: minioadmin

      - name: Verify gscache is available
        run: |
          echo "GOCACHEPROG is set to: $GOCACHEPROG"
          which gscache
          gscache version

      - name: Test gscache with MinIO backend
        run: |
          cd test
          gscache stats

          go build -o helloworld helloworld.go
          ./helloworld
          sleep 2 && gscache stats

          go build -o helloworld helloworld.go
          sleep 2 && gscache stats

      - name: List gscache contents
        run: |
          ./mc ls local/
